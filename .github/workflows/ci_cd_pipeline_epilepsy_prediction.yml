name: CI/CD Pipeline Epilepsy Prediction

on:
  push:
    branches:
      - main
    paths:
      - '_2_services/epilepsy_prediction/docker**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      run: |
        cd _2_services/epilepsy_prediction/docker
        docker build -t fberton98/epilepsy_prediction:latest .
        docker push fberton98/epilepsy_prediction:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Install sshpass
      run: sudo apt-get install -y sshpass
    - name: Test Deployment
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST <<EOF
          cd k8_healtcare_cluster/_2_services/epilepsy_prediction
          APPENDSTRING="-temp"
          sed -e "s/\${APPENDSTRING}/$APPENDSTRING/g" deployment_service_test.yaml | kubectl apply -f -
          sleep 120
          kubectl delete -f deployment_service_test.yaml
        EOF

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Install sshpass
      run: sudo apt-get install -y sshpass
    - name: Restart Kubernetes deployment
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST <<EOF
          kubectl rollout restart deployment epilepsy-prediction-deployment
        EOF